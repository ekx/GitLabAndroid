import com.android.build.gradle.tasks.PackageApplication

apply plugin: 'com.android.application'
apply from: 'signing.gradle'

android {
    compileSdkVersion 22
    buildToolsVersion '21.1.2'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 37
        versionName "1.6.0"
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            debuggable false
            jniDebuggable false
            zipAlignEnabled true
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

dependencies {
    compile 'commons-io:commons-io:2.4'
    compile 'commons-lang:commons-lang:2.6'
    compile 'commons-codec:commons-codec:1.9'
    compile 'com.google.code.gson:gson:2.3'
    compile 'net.danlew:android.joda:2.4.1'
    compile 'com.squareup.picasso:picasso:2.3.4'
    compile 'com.squareup.retrofit:retrofit:1.7.0'
    compile 'com.jakewharton:butterknife:5.1.2'
    compile 'de.keyboardsurfer.android.widget:crouton:1.8.5@aar'
    compile 'com.melnykov:floatingactionbutton:1.0.4'
    compile 'com.android.support:support-v4:22.1.1'
    compile 'com.android.support:appcompat-v7:22.1.1'
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

task copyNativeLibs(type: Copy) {
    from(new File(getProjectDir(), 'native-libs')) { include '**/*.so' }
    into new File(buildDir, 'native-libs')
}

tasks.withType(JavaCompile) { compileTask -> compileTask.dependsOn copyNativeLibs }

clean.dependsOn 'cleanCopyNativeLibs'

tasks.withType(PackageApplication) { pkgTask ->
    pkgTask.jniFolders = new HashSet<File>()
    pkgTask.jniFolders.add(new File(buildDir, 'native-libs'))
}